apply plugin: 'application'

mainClassName = "net.tajzich.raspberry.demo.app.Main"
applicationName = "jb"

configurations {
    angular
}

def artifacts = [
        [groupId: 'org.springframework', version: '3.2.2.RELEASE', modules: ['spring-core', 'spring-beans', 'spring-test', 'spring-aop', 'spring-context', 'spring-web', 'spring-webmvc']],
        [groupId: 'org.codehaus.groovy', version: '2.1.3', modules: ['groovy-all']],
        [groupId: 'org.slf4j', version: '1.6.6', modules: ['slf4j-api', 'jcl-over-slf4j', 'log4j-over-slf4j']],
        [groupId: 'ch.qos.logback', version: '1.0.7', modules: ['logback-core', 'logback-classic']],
        [groupId: 'commons-fileupload', version: '1.2.2', modules: ['commons-fileupload']],
        [groupId: 'commons-io', version: '2.1', modules: ['commons-io']],
        [groupId: 'org.codehaus.jackson', version: '1.9.9', modules: ['jackson-mapper-asl']],
        [groupId: 'com.pi4j', version: '0.0.5', modules: ['pi4j-core', 'pi4j-device', 'pi4j-gpio-extension', 'pi4j-service']]
]

repositories {
    mavenCentral()
}

dependencies {

    compile "javax.servlet:javax.servlet-api:3.0.1"
    compile "org.eclipse.jetty:jetty-servlet:9.0.7.v20131107"
    compile "org.eclipse.jetty:jetty-servlets:9.0.7.v20131107"


    compile project(':angular')
    angular project(':angular')

    testCompile 'junit:junit:4.10'

    artifacts.each { dependency ->

        dependency.modules.each {name ->
            compile group: dependency.groupId, name:name, version: dependency.version
        }
    }
}

task extractDeps(type: Copy) {

    from {
        configurations.angular.filter { it.name.startsWith('angular') }.collect {
            zipTree(it)
        }
    }
    into new File(buildDir, "angular")
}

applicationDistribution.from(extractDeps) {
    into "angular"
}

project.tasks.installApp.doFirst {
    project.tasks.extractDeps.execute()
}

task stage(dependsOn: ['clean', 'installApp'])

project.tasks.run.dependsOn(project.tasks.stage)